<html lang="zh-CN"><head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>优品商品展示平台</title>
  <!-- Tailwind CSS v3 -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Font Awesome -->
  <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" rel="stylesheet">
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.8/dist/chart.umd.min.js"></script>
  <!-- 统一的 Tailwind 配置 -->
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#3B82F6',
            secondary: '#10B981',
            accent: '#F59E0B',
            danger: '#EF4444',
            dark: '#1F2937',
            light: '#F3F4F6'
          },
          fontFamily: {
            sans: ['Inter', 'system-ui', 'sans-serif'],
          },
          animation: {
            'fade-in': 'fadeIn 0.3s ease-in-out',
            'slide-in': 'slideIn 0.3s ease-in-out',
            'pulse-slow': 'pulse 3s infinite',
          },
          keyframes: {
            fadeIn: {
              '0%': { opacity: '0' },
              '100%': { opacity: '1' },
            },
            slideIn: {
              '0%': { transform: 'translateY(20px)', opacity: '0' },
              '100%': { transform: 'translateY(0)', opacity: '1' },
            }
          }
        }
      }
    }
  </script>
  <style type="text/tailwindcss">
    @layer utilities {
      .content-auto {
        content-visibility: auto;
      }
      .glass-effect {
        @apply bg-white bg-opacity-20 backdrop-blur-lg;
      }
      .card-hover {
        @apply transition-all duration-300 hover:shadow-lg hover:-translate-y-1;
      }
      .btn-primary {
        @apply bg-primary text-white px-4 py-2 rounded-md hover:bg-primary/90 transition-all;
      }
      .btn-secondary {
        @apply bg-secondary text-white px-4 py-2 rounded-md hover:bg-secondary/90 transition-all;
      }
      .btn-outline {
        @apply border border-primary text-primary px-4 py-2 rounded-md hover:bg-primary hover:text-white transition-all;
      }
      .badge {
        @apply px-2 py-1 text-xs rounded-full;
      }
      .badge-new {
        @apply bg-green-100 text-green-800;
      }
      .badge-hot {
        @apply bg-red-100 text-red-800;
      }
      .badge-discount {
        @apply bg-yellow-100 text-yellow-800;
      }
    }
  </style>
</head>
<body class="bg-gray-50 font-sans">
  <!-- 顶部导航栏 -->
  <header class="sticky top-0 z-50 bg-white shadow-sm">
    <div class="container mx-auto px-4">
      <div class="flex items-center justify-between py-4">
        <!-- Logo -->
        <div class="flex items-center space-x-2">
          <i class="fa fa-shopping-bag text-primary text-2xl"></i>
          <span class="text-xl font-bold text-dark">EZgo</span>
        </div>
        
        <!-- 搜索框 -->
        <div class="hidden md:flex flex-1 max-w-xl mx-8">
          <div class="relative w-full">
            <input type="text" placeholder="搜索商品..." class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent">
            <i class="fa fa-search absolute left-3 top-3 text-gray-400"></i>
          </div>
        </div>
        
        <!-- 导航菜单 -->
        <nav class="hidden md:flex items-center space-x-6">
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">首页</a>
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">分类</a>
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">新品</a>
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">优惠</a>
        </nav>
        
        <!-- 用户操作区 -->
        <div class="flex items-center space-x-4">
          <button id="search-btn" class="md:hidden text-gray-600 hover:text-primary">
            <i class="fa fa-search text-xl"></i>
          </button>
          <button id="cart-btn" class="relative text-gray-600 hover:text-primary">
            <i class="fa fa-shopping-cart text-xl"></i>
            <span id="cart-count" class="absolute -top-2 -right-2 bg-primary text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">0</span>
          </button>
          <button id="favorites-btn" class="relative text-gray-600 hover:text-primary">
            <i class="fa fa-heart-o text-xl"></i>
            <span id="favorites-count" class="absolute -top-2 -right-2 bg-primary text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">0</span>
          </button>
          <button id="mobile-menu-btn" class="md:hidden text-gray-600 hover:text-primary">
            <i class="fa fa-bars text-xl"></i>
          </button>
        </div>
      </div>
      
      <!-- 移动端搜索框 (默认隐藏) -->
      <div id="mobile-search" class="md:hidden py-4 hidden">
        <div class="relative">
          <input type="text" placeholder="搜索商品..." class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent">
          <i class="fa fa-search absolute left-3 top-3 text-gray-400"></i>
        </div>
      </div>
      
      <!-- 移动端菜单 (默认隐藏) -->
      <div id="mobile-menu" class="md:hidden py-4 hidden">
        <nav class="flex flex-col space-y-3">
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">首页</a>
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">分类</a>
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">新品</a>
          <a href="#" class="text-gray-600 hover:text-primary transition-colors">优惠</a>
        </nav>
      </div>
    </div>
  </header>

  <!-- 主内容区 -->
  <main class="container mx-auto px-4 py-6">
    <!-- 面包屑导航 -->
    <div class="text-sm text-gray-500 mb-6">
      <a href="#" class="hover:text-primary">首页</a>
      <span class="mx-2">/</span>
      <span class="text-primary">全部商品</span>
    </div>
    
    <div class="flex flex-col lg:flex-row gap-6">
      <!-- 侧边筛选栏 -->
      <aside id="sidebar" class="lg:w-1/4 bg-white rounded-lg shadow-sm p-4 h-fit">
        <h2 class="text-lg font-semibold mb-4 pb-2 border-b">筛选条件</h2>
        
        <!-- 分类筛选 -->
        <div class="mb-6">
          <h3 class="font-medium mb-3">商品分类</h3>
          <ul class="space-y-2">
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="category-filter form-checkbox h-4 w-4 text-primary rounded" value="all" checked="">
                <span class="ml-2">全部商品</span>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="category-filter form-checkbox h-4 w-4 text-primary rounded" value="electronics">
                <span class="ml-2">电子产品</span>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="category-filter form-checkbox h-4 w-4 text-primary rounded" value="clothing">
                <span class="ml-2">服装</span>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="category-filter form-checkbox h-4 w-4 text-primary rounded" value="home">
                <span class="ml-2">家居用品</span>
              </label>
            </li>
          </ul>
        </div>
        
        <!-- 价格筛选 -->
        <div class="mb-6">
          <h3 class="font-medium mb-3">价格区间</h3>
          <div class="px-2">
            <div class="flex items-center justify-between mb-2">
              <span id="price-min" class="text-sm">¥0</span>
              <span id="price-max" class="text-sm">¥5000+</span>
            </div>
            <input type="range" id="price-range" min="0" max="5000" step="100" value="5000" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
          </div>
          <div class="mt-4 flex space-x-2">
            <button class="price-filter flex-1 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50" data-min="0" data-max="1000">¥0-¥1000</button>
            <button class="price-filter flex-1 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50" data-min="1000" data-max="2000">¥1000-¥2000</button>
            <button class="price-filter flex-1 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50" data-min="2000" data-max="5000">¥2000+</button>
          </div>
        </div>
        
        <!-- 评分筛选 -->
        <div class="mb-6">
          <h3 class="font-medium mb-3">用户评分</h3>
          <ul class="space-y-2">
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="rating-filter form-checkbox h-4 w-4 text-primary rounded" value="4">
                <div class="ml-2 flex items-center">
                  <span class="text-yellow-400">
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star-o"></i>
                  </span>
                  <span class="ml-1">及以上</span>
                </div>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="rating-filter form-checkbox h-4 w-4 text-primary rounded" value="3">
                <div class="ml-2 flex items-center">
                  <span class="text-yellow-400">
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star-o"></i>
                    <i class="fa fa-star-o"></i>
                  </span>
                  <span class="ml-1">及以上</span>
                </div>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="rating-filter form-checkbox h-4 w-4 text-primary rounded" value="2">
                <div class="ml-2 flex items-center">
                  <span class="text-yellow-400">
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star"></i>
                    <i class="fa fa-star-o"></i>
                    <i class="fa fa-star-o"></i>
                    <i class="fa fa-star-o"></i>
                  </span>
                  <span class="ml-1">及以上</span>
                </div>
              </label>
            </li>
          </ul>
        </div>
        
        <!-- 其他筛选 -->
        <div class="mb-6">
          <h3 class="font-medium mb-3">其他</h3>
          <ul class="space-y-2">
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="feature-filter form-checkbox h-4 w-4 text-primary rounded" value="new">
                <span class="ml-2">新品</span>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="feature-filter form-checkbox h-4 w-4 text-primary rounded" value="hot">
                <span class="ml-2">热销</span>
              </label>
            </li>
            <li>
              <label class="flex items-center cursor-pointer">
                <input type="checkbox" class="feature-filter form-checkbox h-4 w-4 text-primary rounded" value="discount">
                <span class="ml-2">优惠</span>
              </label>
            </li>
          </ul>
        </div>
        
        <!-- 重置筛选按钮 -->
        <button id="reset-filters" class="w-full py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors">
          重置筛选
        </button>
      </aside>
      
      <!-- 商品展示区 -->
      <div class="lg:w-3/4">
        <!-- 排序和视图切换 -->
        <div class="bg-white rounded-lg shadow-sm p-4 mb-6 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <div class="flex items-center space-x-4">
            <span class="text-gray-600">排序方式:</span>
            <select id="sort-select" class="border border-gray-300 rounded-md px-3 py-1 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent">
              <option value="default">默认排序</option>
              <option value="price-asc">价格从低到高</option>
              <option value="price-desc">价格从高到低</option>
              <option value="rating-desc">评分从高到低</option>
              <option value="newest">最新上架</option>
            </select>
          </div>
          
          <div class="flex items-center space-x-2">
            <button id="grid-view" class="p-2 bg-primary text-white rounded">
              <i class="fa fa-th"></i>
            </button>
            <button id="list-view" class="p-2 text-gray-600 hover:bg-gray-100 rounded">
              <i class="fa fa-list"></i>
            </button>
          </div>
        </div>
        
        <!-- 商品网格 -->
        <div id="products-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          <!-- 商品卡片将通过JavaScript动态生成 -->
        </div>
        
        <!-- 分页控制 -->
        <div class="mt-8 flex justify-center">
          <nav class="inline-flex rounded-md shadow">
            <a href="#" class="py-2 px-4 bg-white border border-gray-300 rounded-l-md text-gray-700 hover:bg-gray-50">
              <i class="fa fa-chevron-left"></i>
            </a>
            <a href="#" class="py-2 px-4 bg-primary text-white border border-primary">1</a>
            <a href="#" class="py-2 px-4 bg-white border border-gray-300 text-gray-700 hover:bg-gray-50">2</a>
            <a href="#" class="py-2 px-4 bg-white border border-gray-300 text-gray-700 hover:bg-gray-50">3</a>
            <a href="#" class="py-2 px-4 bg-white border border-gray-300 rounded-r-md text-gray-700 hover:bg-gray-50">
              <i class="fa fa-chevron-right"></i>
            </a>
          </nav>
        </div>
      </div>
    </div>
  </main>

  <!-- 商品详情弹窗 -->
  <div id="product-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
    <div class="absolute inset-0 bg-black bg-opacity-50" id="modal-overlay"></div>
    <div class="relative bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-y-auto animate-fade-in">
      <button id="close-modal" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 z-10">
        <i class="fa fa-times text-xl"></i>
      </button>
      
      <div class="p-6" id="product-detail-content">
        <!-- 商品详情内容将通过JavaScript动态生成 -->
      </div>
    </div>
  </div>

  <!-- 购物车侧边栏 -->
  <div id="cart-sidebar" class="fixed top-0 right-0 z-50 w-full sm:w-96 h-full bg-white shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out">
    <div class="flex flex-col h-full">
      <div class="p-4 border-b flex justify-between items-center">
        <h2 class="text-xl font-semibold">购物车</h2>
        <button id="close-cart" class="text-gray-500 hover:text-gray-700">
          <i class="fa fa-times text-xl"></i>
        </button>
      </div>
      
      <div id="cart-items" class="flex-1 overflow-y-auto p-4">
        <!-- 购物车为空状态 -->
        <div id="empty-cart" class="flex flex-col items-center justify-center h-full text-center">
          <i class="fa fa-shopping-cart text-gray-300 text-5xl mb-4"></i>
          <p class="text-gray-500">购物车还是空的</p>
          <button id="start-shopping" class="mt-4 px-6 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors">
            开始购物
          </button>
        </div>
        
        <!-- 购物车商品列表 -->
        <div id="cart-list" class="space-y-4 hidden">
          <!-- 购物车商品将通过JavaScript动态生成 -->
        </div>
      </div>
      
      <div id="cart-summary" class="p-4 border-t hidden">
        <div class="flex justify-between mb-2">
          <span class="text-gray-600">小计</span>
          <span id="cart-subtotal" class="font-semibold">¥0.00</span>
        </div>
        <div class="flex justify-between mb-4">
          <span class="text-gray-600">商品数量</span>
          <span id="cart-item-count" class="font-semibold">0</span>
        </div>
        <button id="checkout-btn" class="w-full py-3 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors">
          结算
        </button>
      </div>
    </div>
  </div>

  <!-- 收藏夹侧边栏 -->
  <div id="favorites-sidebar" class="fixed top-0 right-0 z-50 w-full sm:w-96 h-full bg-white shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out">
    <div class="flex flex-col h-full">
      <div class="p-4 border-b flex justify-between items-center">
        <h2 class="text-xl font-semibold">我的收藏</h2>
        <button id="close-favorites" class="text-gray-500 hover:text-gray-700">
          <i class="fa fa-times text-xl"></i>
        </button>
      </div>
      
      <div id="favorites-items" class="flex-1 overflow-y-auto p-4">
        <!-- 收藏夹为空状态 -->
        <div id="empty-favorites" class="flex flex-col items-center justify-center h-full text-center">
          <i class="fa fa-heart-o text-gray-300 text-5xl mb-4"></i>
          <p class="text-gray-500">还没有收藏商品</p>
          <button id="browse-products" class="mt-4 px-6 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors">
            浏览商品
          </button>
        </div>
        
        <!-- 收藏夹商品列表 -->
        <div id="favorites-list" class="grid grid-cols-1 sm:grid-cols-2 gap-4 hidden">
          <!-- 收藏夹商品将通过JavaScript动态生成 -->
        </div>
      </div>
    </div>
  </div>

  <!-- 返回顶部按钮 -->
  <button id="back-to-top" class="fixed bottom-6 right-6 bg-primary text-white w-12 h-12 rounded-full flex items-center justify-center shadow-lg opacity-0 invisible transition-all duration-300">
    <i class="fa fa-chevron-up"></i>
  </button>

  <!-- 底部版权信息 -->
  <footer class="bg-dark text-white py-8 mt-12">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <div>
          <h3 class="text-lg font-semibold mb-4">关于我们</h3>
          <ul class="space-y-2">
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">公司简介</a></li>
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">招贤纳士</a></li>
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">联系我们</a></li>
          </ul>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-4">购物指南</h3>
          <ul class="space-y-2">
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">购物流程</a></li>
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">会员介绍</a></li>
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">常见问题</a></li>
          </ul>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-4">配送方式</h3>
          <ul class="space-y-2">
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">上门自提</a></li>
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">211限时达</a></li>
            <li><a href="#" class="text-gray-300 hover:text-white transition-colors">配送服务查询</a></li>
          </ul>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-4">关注我们</h3>
          <div class="flex space-x-4 mb-4">
            <a href="#" class="text-gray-300 hover:text-white transition-colors">
              <i class="fa fa-weixin text-2xl"></i>
            </a>
            <a href="#" class="text-gray-300 hover:text-white transition-colors">
              <i class="fa fa-weibo text-2xl"></i>
            </a>
            <a href="#" class="text-gray-300 hover:text-white transition-colors">
              <i class="fa fa-qq text-2xl"></i>
            </a>
          </div>
          <p class="text-gray-400">客服热线: 400-123-4567</p>
        </div>
      </div>
      <div class="border-t border-gray-700 mt-8 pt-6 text-center text-gray-400">
        <p>© 2025 EZgo. 保留所有权利.</p>
      </div>
    </div>
  </footer>

  <!-- JavaScript -->
  <script>
    // 商品数据
    const products = [
      {
        id: 'p1',
        name: '超薄全面屏智能手机',
        category: 'electronics',
        subCategory: '手机',
        price: 3999,
        originalPrice: 4299,
        rating: 4.8,
        reviewCount: 1258,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/tos-cn-i-be4g95zd3a/2141359952430104604~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=BzC3uSsRHWo7nQ8s0zOgrxsyD%2BY%3D',
          'https://p3-doubao-search-sign.byteimg.com/labis/image/b9ae6dff9312b5187b94d62a499b2c69~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=5ShpRSs9AbMWqOsSWpd5M0jhs2w%3D'
        ],
        description: '6.7英寸超清全面屏，搭载最新处理器，12GB内存，512GB存储空间，5000mAh大容量电池，66W超级快充，支持5G网络。',
        specifications: [
          { name: '屏幕', value: '6.7英寸 AMOLED 2K+分辨率' },
          { name: '处理器', value: '骁龙888' },
          { name: '内存', value: '12GB' },
          { name: '存储', value: '512GB' },
          { name: '电池', value: '5000mAh' },
          { name: '充电', value: '66W有线快充，50W无线快充' },
          { name: '摄像头', value: '后置三摄：5000万像素主摄+1200万像素超广角+800万像素长焦' },
          { name: '系统', value: 'Android 11' }
        ],
        features: ['5G网络', 'AI摄影', '超级夜景', '快速充电', '防水防尘'],
        stock: 125,
        isNew: true,
        isHot: true,
        discount: 0.07
      },
      {
        id: 'p2',
        name: '时尚碎花长袖连衣裙',
        category: 'clothing',
        subCategory: '女装',
        price: 299,
        originalPrice: 499,
        rating: 4.6,
        reviewCount: 876,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/labis/20bc2c0098c3e4efddb9b9c5089361a4~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=lrJrr1WiGlA%2BQCNTwC3yzYTPpYw%3D'
        ],
        description: '春季新款碎花连衣裙，采用轻盈透气的面料，舒适亲肤，优雅的碎花图案设计，适合各种场合穿着。',
        specifications: [
          { name: '材质', value: '100%聚酯纤维' },
          { name: '颜色', value: '蓝色底碎花' },
          { name: '尺码', value: 'S, M, L, XL' },
          { name: '袖长', value: '长袖' },
          { name: '裙长', value: '及膝' },
          { name: '风格', value: '田园风' }
        ],
        features: ['轻盈透气', '舒适亲肤', '优雅碎花', '百搭款式'],
        stock: 56,
        isNew: true,
        isHot: false,
        discount: 0.4
      },
      {
        id: 'p3',
        name: '简约现代三人沙发',
        category: 'home',
        subCategory: '家具',
        price: 2899,
        originalPrice: 3299,
        rating: 4.7,
        reviewCount: 432,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/tos-cn-i-be4g95zd3a/897654074795622517~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=Cwbzxor4knEKnR%2BmYcQNnzUMr6Y%3D'
        ],
        description: '简约现代风格三人沙发，采用高品质面料，舒适耐用，适合各种家居风格，为您的客厅增添时尚感。',
        specifications: [
          { name: '材质', value: '优质布艺+实木框架' },
          { name: '颜色', value: '黄色' },
          { name: '尺寸', value: '220x90x85cm' },
          { name: '座位数', value: '3人' },
          { name: '风格', value: '现代简约' },
          { name: '组装', value: '需简单组装' }
        ],
        features: ['舒适坐感', '耐用面料', '稳固框架', '易于清洁'],
        stock: 18,
        isNew: false,
        isHot: true,
        discount: 0.12
      },
      {
        id: 'p4',
        name: '时尚智能手机',
        category: 'electronics',
        subCategory: '手机',
        price: 2999,
        originalPrice: 3299,
        rating: 4.5,
        reviewCount: 1024,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/labis/image/a17672a894ebef99aba77e7cb3342159~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=0ZoZeTJg7OfwUB9uEf5hS2e7crM%3D'
        ],
        description: '6.5英寸高清屏幕，搭载高性能处理器，8GB内存，256GB存储空间，4500mAh电池，支持快充。',
        specifications: [
          { name: '屏幕', value: '6.5英寸 LCD 1080P分辨率' },
          { name: '处理器', value: '骁龙778G' },
          { name: '内存', value: '8GB' },
          { name: '存储', value: '256GB' },
          { name: '电池', value: '4500mAh' },
          { name: '充电', value: '33W有线快充' },
          { name: '摄像头', value: '后置三摄：4800万像素主摄+800万像素超广角+200万像素微距' },
          { name: '系统', value: 'Android 11' }
        ],
        features: ['4G网络', 'AI摄影', '指纹识别', '快速充电'],
        stock: 89,
        isNew: false,
        isHot: true,
        discount: 0.09
      },
      {
        id: 'p5',
        name: '红色漆皮连衣裙',
        category: 'clothing',
        subCategory: '女装',
        price: 399,
        originalPrice: 599,
        rating: 4.4,
        reviewCount: 326,
        images: [
          'https://p11-doubao-search-sign.byteimg.com/tos-cn-i-be4g95zd3a/1725255368925511694~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=U%2BRgcN31e29yuSz7x%2FUX%2BZ4nRU8%3D'
        ],
        description: '时尚红色漆皮连衣裙，修身设计，展现完美身材曲线，适合派对、夜店等场合穿着。',
        specifications: [
          { name: '材质', value: '漆皮面料' },
          { name: '颜色', value: '红色' },
          { name: '尺码', value: 'S, M, L' },
          { name: '袖长', value: '无袖' },
          { name: '裙长', value: '短款' },
          { name: '风格', value: '性感时尚' }
        ],
        features: ['修身设计', '时尚漆皮', '性感无袖', '派对必备'],
        stock: 24,
        isNew: true,
        isHot: false,
        discount: 0.33
      },
      {
        id: 'p6',
        name: '现代简约皮质沙发',
        category: 'home',
        subCategory: '家具',
        price: 4599,
        originalPrice: 4999,
        rating: 4.9,
        reviewCount: 156,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/labis/a706976c1c727b6604db6a7167b18ade~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=3Ut2t5wMvYrfz1gKfdN2puV%2BXTc%3D'
        ],
        description: '高端皮质沙发，采用进口头层牛皮，质感柔软舒适，现代简约设计，适合各种家居风格。',
        specifications: [
          { name: '材质', value: '进口头层牛皮+实木框架' },
          { name: '颜色', value: '棕色' },
          { name: '尺寸', value: '240x95x90cm' },
          { name: '座位数', value: '3人' },
          { name: '风格', value: '现代简约' },
          { name: '组装', value: '需专业组装' }
        ],
        features: ['豪华质感', '舒适坐感', '耐用皮质', '易清洁'],
        stock: 8,
        isNew: true,
        isHot: true,
        discount: 0.08
      },
      {
        id: 'p7',
        name: '新款智能手机',
        category: 'electronics',
        subCategory: '手机',
        price: 1999,
        originalPrice: 2299,
        rating: 4.3,
        reviewCount: 789,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/labis/image/1b0ca26f6b3b143445d48a680f733c78~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=CRmw2mjM9LYd4%2FNgb%2ByFHgRAlIg%3D'
        ],
        description: '6.5英寸大屏幕，搭载高效处理器，6GB内存，128GB存储空间，5000mAh大容量电池。',
        specifications: [
          { name: '屏幕', value: '6.5英寸 LCD 1080P分辨率' },
          { name: '处理器', value: '联发科天玑700' },
          { name: '内存', value: '6GB' },
          { name: '存储', value: '128GB' },
          { name: '电池', value: '5000mAh' },
          { name: '充电', value: '18W有线快充' },
          { name: '摄像头', value: '后置双摄：1300万像素主摄+200万像素景深' },
          { name: '系统', value: 'Android 10' }
        ],
        features: ['4G网络', '大电池', '大屏幕', '性价比高'],
        stock: 156,
        isNew: true,
        isHot: false,
        discount: 0.13
      },
      {
        id: 'p8',
        name: '时尚牛仔连衣裙',
        category: 'clothing',
        subCategory: '女装',
        price: 349,
        originalPrice: 459,
        rating: 4.7,
        reviewCount: 562,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/labis/45c0329754f0a818d00270274d250963~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=PpV8f52KfRH1U67P5dg4OkHVMic%3D'
        ],
        description: '时尚牛仔连衣裙，采用高品质牛仔面料，舒适透气，简约设计，适合春秋季节穿着。',
        specifications: [
          { name: '材质', value: '100%棉' },
          { name: '颜色', value: '深蓝色' },
          { name: '尺码', value: 'S, M, L, XL' },
          { name: '袖长', value: '七分袖' },
          { name: '裙长', value: '中长款' },
          { name: '风格', value: '休闲时尚' }
        ],
        features: ['舒适透气', '百搭款式', '耐用面料', '时尚设计'],
        stock: 42,
        isNew: false,
        isHot: true,
        discount: 0.24
      },
      {
        id: 'p9',
        name: '多功能沙发床',
        category: 'home',
        subCategory: '家具',
        price: 3299,
        originalPrice: 3699,
        rating: 4.6,
        reviewCount: 278,
        images: [
          'https://p3-doubao-search-sign.byteimg.com/labis/a26061017c282ea9f2217138bd24e0fd~tplv-be4g95zd3a-image.jpeg?rk3s=542c0f93&x-expires=1776953794&x-signature=uZqDtuE%2F1pCTyO2LVlujdrTvdVY%3D'
        ],
        description: '多功能沙发床，白天可作为舒适沙发使用，晚上可展开为床，适合小户型家居使用。',
        specifications: [
          { name: '材质', value: '优质布艺+实木框架' },
          { name: '颜色', value: '灰色' },
          { name: '尺寸', value: '180x90x85cm（沙发模式），180x190cm（床模式）' },
          { name: '座位数', value: '2人' },
          { name: '风格', value: '现代简约' },
          { name: '功能', value: '沙发/床两用' }
        ],
        features: ['多功能设计', '节省空间', '舒适坐感', '易于转换'],
        stock: 12,
        isNew: true,
        isHot: false,
        discount: 0.11
      }
    ];

    // 用户数据
    let cart = {
      items: [],
      totalItems: 0,
      totalPrice: 0
    };

    let favorites = {
      items: []
    };

    // 浏览历史
    let browsingHistory = [];

    // DOM 元素
    const productsGrid = document.getElementById('products-grid');
    const productModal = document.getElementById('product-modal');
    const modalOverlay = document.getElementById('modal-overlay');
    const closeModal = document.getElementById('close-modal');
    const productDetailContent = document.getElementById('product-detail-content');
    const cartSidebar = document.getElementById('cart-sidebar');
    const cartBtn = document.getElementById('cart-btn');
    const closeCart = document.getElementById('close-cart');
    const cartItems = document.getElementById('cart-items');
    const emptyCart = document.getElementById('empty-cart');
    const cartList = document.getElementById('cart-list');
    const cartSummary = document.getElementById('cart-summary');
    const cartSubtotal = document.getElementById('cart-subtotal');
    const cartItemCount = document.getElementById('cart-item-count');
    const cartCount = document.getElementById('cart-count');
    const favoritesSidebar = document.getElementById('favorites-sidebar');
    const favoritesBtn = document.getElementById('favorites-btn');
    const closeFavorites = document.getElementById('close-favorites');
    const favoritesItems = document.getElementById('favorites-items');
    const emptyFavorites = document.getElementById('empty-favorites');
    const favoritesList = document.getElementById('favorites-list');
    const favoritesCount = document.getElementById('favorites-count');
    const backToTop = document.getElementById('back-to-top');
    const searchBtn = document.getElementById('search-btn');
    const mobileSearch = document.getElementById('mobile-search');
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    const startShopping = document.getElementById('start-shopping');
    const browseProducts = document.getElementById('browse-products');
    const checkoutBtn = document.getElementById('checkout-btn');
    const priceRange = document.getElementById('price-range');
    const priceMin = document.getElementById('price-min');
    const priceMax = document.getElementById('price-max');
    const resetFilters = document.getElementById('reset-filters');
    const sortSelect = document.getElementById('sort-select');
    const gridView = document.getElementById('grid-view');
    const listView = document.getElementById('list-view');

    // 初始化页面
    document.addEventListener('DOMContentLoaded', () => {
      // 渲染商品列表
      renderProducts(products);
      
      // 初始化事件监听
      initEventListeners();
      
      // 检查本地存储
      checkLocalStorage();
      
      // 更新购物车和收藏夹计数
      updateCartCount();
      updateFavoritesCount();
    });

    // 渲染商品列表
    function renderProducts(productsToRender) {
      productsGrid.innerHTML = '';
      
      if (productsToRender.length === 0) {
        productsGrid.innerHTML = `
          <div class="col-span-full flex flex-col items-center justify-center py-12">
            <i class="fa fa-search text-gray-300 text-5xl mb-4"></i>
            <p class="text-gray-500 text-lg">没有找到符合条件的商品</p>
            <button id="reset-all-filters" class="mt-4 px-6 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors">
              清除所有筛选
            </button>
          </div>
        `;
        
        document.getElementById('reset-all-filters').addEventListener('click', () => {
          resetAllFilters();
          renderProducts(products);
        });
        
        return;
      }
      
      productsToRender.forEach(product => {
        const productCard = document.createElement('div');
        productCard.className = 'bg-white rounded-lg shadow-sm overflow-hidden card-hover';
        productCard.innerHTML = `
          <div class="relative">
            <img src="${product.images[0]}" alt="${product.name}" class="w-full h-64 object-contain p-4">
            ${product.isNew ? '<span class="badge badge-new absolute top-3 left-3">新品</span>' : ''}
            ${product.isHot ? '<span class="badge badge-hot absolute top-3 right-3">热销</span>' : ''}
            ${product.discount > 0 ? `<span class="badge badge-discount absolute bottom-3 left-3">${Math.round(product.discount * 100)}% OFF</span>` : ''}
            <button class="favorite-btn absolute top-3 right-3 w-8 h-8 rounded-full bg-white bg-opacity-80 flex items-center justify-center text-gray-500 hover:text-red-500 transition-colors ${isFavorite(product.id) ? 'text-red-500' : ''}" data-id="${product.id}">
              <i class="fa ${isFavorite(product.id) ? 'fa-heart' : 'fa-heart-o'}"></i>
            </button>
          </div>
          <div class="p-4">
            <h3 class="text-lg font-medium mb-2 line-clamp-2 h-14" title="${product.name}">${product.name}</h3>
            <div class="flex items-center mb-2">
              <div class="flex text-yellow-400">
                ${renderStars(product.rating)}
              </div>
              <span class="text-sm text-gray-500 ml-2">(${product.reviewCount})</span>
            </div>
            <div class="flex items-center mb-4">
              <span class="text-xl font-bold text-primary">¥${product.price}</span>
              ${product.originalPrice > product.price ? `<span class="text-sm text-gray-500 line-through ml-2">¥${product.originalPrice}</span>` : ''}
            </div>
            <div class="flex space-x-2">
              <button class="add-to-cart-btn flex-1 py-2 bg-primary text-white rounded hover:bg-primary/90 transition-colors" data-id="${product.id}">
                <i class="fa fa-shopping-cart mr-1"></i> 加入购物车
              </button>
              <button class="view-details-btn w-10 h-10 flex items-center justify-center border border-gray-300 rounded hover:bg-gray-50 transition-colors" data-id="${product.id}">
                <i class="fa fa-angle-right"></i>
              </button>
            </div>
          </div>
        `;
        
        productsGrid.appendChild(productCard);
      });
      
      // 添加事件监听
      document.querySelectorAll('.add-to-cart-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const productId = e.currentTarget.dataset.id;
          addToCart(productId);
        });
      });
      
      document.querySelectorAll('.view-details-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const productId = e.currentTarget.dataset.id;
          showProductDetails(productId);
        });
      });
      
      document.querySelectorAll('.favorite-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const productId = e.currentTarget.dataset.id;
          toggleFavorite(productId);
          
          // 更新按钮状态
          const icon = e.currentTarget.querySelector('i');
          if (icon.classList.contains('fa-heart-o')) {
            icon.classList.remove('fa-heart-o');
            icon.classList.add('fa-heart');
            e.currentTarget.classList.add('text-red-500');
          } else {
            icon.classList.remove('fa-heart');
            icon.classList.add('fa-heart-o');
            e.currentTarget.classList.remove('text-red-500');
          }
        });
      });
    }

    // 渲染星级评分
    function renderStars(rating) {
      let stars = '';
      const fullStars = Math.floor(rating);
      const halfStar = rating % 1 >= 0.5;
      
      for (let i = 0; i < fullStars; i++) {
        stars += '<i class="fa fa-star"></i>';
      }
      
      if (halfStar) {
        stars += '<i class="fa fa-star-half-o"></i>';
      }
      
      const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
      for (let i = 0; i < emptyStars; i++) {
        stars += '<i class="fa fa-star-o"></i>';
      }
      
      return stars;
    }

    // 显示商品详情
    function showProductDetails(productId) {
      const product = products.find(p => p.id === productId);
      
      if (!product) return;
      
      // 添加到浏览历史
      addToBrowsingHistory(productId);
      
      productDetailContent.innerHTML = `
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- 商品图片 -->
          <div>
            <div class="bg-gray-100 rounded-lg p-4 flex items-center justify-center">
              <img src="${product.images[0]}" alt="${product.name}" class="max-h-80 object-contain">
            </div>
            ${product.images.length > 1 ? `
              <div class="grid grid-cols-4 gap-2 mt-4">
                ${product.images.map((img, index) => `
                  <div class="bg-gray-100 rounded p-2 cursor-pointer hover:ring-2 hover:ring-primary transition-all ${index === 0 ? 'ring-2 ring-primary' : ''}">
                    <img src="${img}" alt="${product.name}" class="w-full h-20 object-contain">
                  </div>
                `).join('')}
              </div>
            ` : ''}
          </div>
          
          <!-- 商品信息 -->
          <div>
            <div class="flex items-center mb-2">
              ${product.isNew ? '<span class="badge badge-new mr-2">新品</span>' : ''}
              ${product.isHot ? '<span class="badge badge-hot mr-2">热销</span>' : ''}
              ${product.discount > 0 ? `<span class="badge badge-discount">${Math.round(product.discount * 100)}% OFF</span>` : ''}
            </div>
            <h1 class="text-2xl font-bold mb-2">${product.name}</h1>
            <div class="flex items-center mb-4">
              <div class="flex text-yellow-400">
                ${renderStars(product.rating)}
              </div>
              <span class="text-sm text-gray-500 ml-2">(${product.reviewCount} 评价)</span>
            </div>
            <div class="flex items-center mb-6">
              <span class="text-3xl font-bold text-primary">¥${product.price}</span>
              ${product.originalPrice > product.price ? `<span class="text-lg text-gray-500 line-through ml-3">¥${product.originalPrice}</span>` : ''}
            </div>
            
            <div class="mb-6">
              <h2 class="text-lg font-medium mb-2">选择规格</h2>
              <div class="flex flex-wrap gap-2">
                ${product.specifications.slice(0, 3).map(spec => `
                  <div class="border border-gray-300 rounded-md px-3 py-1 cursor-pointer hover:border-primary hover:text-primary transition-colors">
                    ${spec.value}
                  </div>
                `).join('')}
              </div>
            </div>
            
            <div class="mb-6">
              <h2 class="text-lg font-medium mb-2">数量</h2>
              <div class="flex items-center">
                <button class="quantity-btn w-10 h-10 border border-gray-300 rounded-l-md flex items-center justify-center hover:bg-gray-50" data-action="decrease">
                  <i class="fa fa-minus"></i>
                </button>
                <input type="number" class="quantity-input w-16 h-10 border-t border-b border-gray-300 text-center focus:outline-none" value="1" min="1" max="${product.stock}">
                <button class="quantity-btn w-10 h-10 border border-gray-300 rounded-r-md flex items-center justify-center hover:bg-gray-50" data-action="increase">
                  <i class="fa fa-plus"></i>
                </button>
                <span class="text-sm text-gray-500 ml-4">库存 ${product.stock} 件</span>
              </div>
            </div>
            
            <div class="flex space-x-4 mb-8">
              <button class="add-to-cart-detail-btn flex-1 py-3 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors" data-id="${product.id}">
                <i class="fa fa-shopping-cart mr-2"></i> 加入购物车
              </button>
              <button class="buy-now-btn flex-1 py-3 bg-accent text-white rounded-md hover:bg-accent/90 transition-colors">
                <i class="fa fa-check mr-2"></i> 立即购买
              </button>
              <button class="favorite-detail-btn w-12 h-12 border border-gray-300 rounded-md flex items-center justify-center hover:bg-gray-50 transition-colors ${isFavorite(product.id) ? 'text-red-500 border-red-500' : ''}" data-id="${product.id}">
                <i class="fa ${isFavorite(product.id) ? 'fa-heart' : 'fa-heart-o'}"></i>
              </button>
            </div>
            
            <div class="border-t pt-6">
              <h2 class="text-lg font-medium mb-3">商品特点</h2>
              <ul class="space-y-2">
                ${product.features.map(feature => `
                  <li class="flex items-start">
                    <i class="fa fa-check-circle text-green-500 mt-1 mr-2"></i>
                    <span>${feature}</span>
                  </li>
                `).join('')}
              </ul>
            </div>
          </div>
        </div>
        
        <!-- 商品详情标签页 -->
        <div class="mt-8 border-t">
          <div class="flex border-b">
            <button class="detail-tab py-3 px-6 font-medium text-primary border-b-2 border-primary" data-tab="description">
              商品详情
            </button>
            <button class="detail-tab py-3 px-6 font-medium text-gray-500 hover:text-primary" data-tab="specifications">
              规格参数
            </button>
            <button class="detail-tab py-3 px-6 font-medium text-gray-500 hover:text-primary" data-tab="reviews">
              用户评价
            </button>
          </div>
          
          <!-- 商品详情内容 -->
          <div class="py-6">
            <div id="description-tab" class="tab-content">
              <p class="text-gray-700 leading-relaxed">${product.description}</p>
              <div class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4">
                ${product.images.map(img => `
                  <div class="bg-gray-100 rounded-lg p-4 flex items-center justify-center">
                    <img src="${img}" alt="${product.name}" class="max-h-60 object-contain">
                  </div>
                `).join('')}
              </div>
            </div>
            
            <div id="specifications-tab" class="tab-content hidden">
              <div class="bg-gray-50 rounded-lg p-6">
                <table class="w-full">
                  <tbody>
                    ${product.specifications.map(spec => `
                      <tr class="border-b border-gray-200">
                        <td class="py-3 font-medium text-gray-700 w-1/3">${spec.name}</td>
                        <td class="py-3 text-gray-600">${spec.value}</td>
                      </tr>
                    `).join('')}
                  </tbody>
                </table>
              </div>
            </div>
            
            <div id="reviews-tab" class="tab-content hidden">
              <div class="flex items-center mb-6">
                <div class="text-4xl font-bold text-primary mr-4">${product.rating}</div>
                <div>
                  <div class="flex text-yellow-400 mb-1">
                    ${renderStars(product.rating)}
                  </div>
                  <div class="text-sm text-gray-500">${product.reviewCount} 条评价</div>
                </div>
              </div>
              
              <!-- 评分分布 -->
              <div class="mb-8">
                ${[5, 4, 3, 2, 1].map(star => {
                  const percentage = Math.round(Math.random() * 50 + 30);
                  return `
                    <div class="flex items-center mb-2">
                      <div class="w-16 flex items-center">
                        <div class="flex text-yellow-400">
                          ${Array(star).fill('<i class="fa fa-star"></i>').join('')}
                          ${Array(5 - star).fill('<i class="fa fa-star-o"></i>').join('')}
                        </div>
                      </div>
                      <div class="flex-1 h-2 bg-gray-200 rounded-full overflow-hidden">
                        <div class="h-full bg-yellow-400 rounded-full" style="width: ${percentage}%"></div>
                      </div>
                      <div class="w-12 text-right text-sm text-gray-500">${percentage}%</div>
                    </div>
                  `;
                }).join('')}
              </div>
              
              <!-- 评价列表 -->
              <div class="space-y-6">
                ${[1, 2, 3].map(() => {
                  const rating = Math.floor(Math.random() * 3) + 3; // 3-5星
                  return `
                    <div class="border-b pb-6">
                      <div class="flex justify-between mb-2">
                        <div class="flex items-center">
                          <div class="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center text-white font-medium">
                            ${String.fromCharCode(65 + Math.floor(Math.random() * 26))}
                          </div>
                          <div class="ml-3">
                            <div class="font-medium">用户${Math.floor(Math.random() * 1000)}</div>
                            <div class="flex text-yellow-400 text-sm">
                              ${renderStars(rating)}
                            </div>
                          </div>
                        </div>
                        <div class="text-sm text-gray-500">${getRandomDate()}</div>
                      </div>
                      <p class="text-gray-700">${getRandomReview()}</p>
                      ${Math.random() > 0.5 ? `
                        <div class="mt-3 grid grid-cols-3 gap-2">
                          ${Array(Math.floor(Math.random() * 3) + 1).fill('').map(() => `
                            <div class="bg-gray-100 rounded p-1">
                              <img src="${product.images[Math.floor(Math.random() * product.images.length)]}" alt="用户评价图片" class="w-full h-20 object-cover rounded">
                            </div>
                          `).join('')}
                        </div>
                      ` : ''}
                    </div>
                  `;
                }).join('')}
              </div>
              
              <div class="mt-6 text-center">
                <button class="px-6 py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors">
                  查看更多评价
                </button>
              </div>
            </div>
          </div>
        </div>
        
        <!-- 相关推荐 -->
        <div class="mt-12">
          <h2 class="text-xl font-semibold mb-6">相关推荐</h2>
          <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
            ${getRelatedProducts(product.id, 4).map(relatedProduct => `
              <div class="bg-white rounded-lg shadow-sm overflow-hidden card-hover">
                <div class="relative">
                  <img src="${relatedProduct.images[0]}" alt="${relatedProduct.name}" class="w-full h-40 object-contain p-2">
                  <button class="favorite-btn absolute top-2 right-2 w-7 h-7 rounded-full bg-white bg-opacity-80 flex items-center justify-center text-gray-500 hover:text-red-500 transition-colors ${isFavorite(relatedProduct.id) ? 'text-red-500' : ''}" data-id="${relatedProduct.id}">
                    <i class="fa ${isFavorite(relatedProduct.id) ? 'fa-heart' : 'fa-heart-o'}"></i>
                  </button>
                </div>
                <div class="p-2">
                  <h3 class="text-sm font-medium mb-1 line-clamp-2 h-10" title="${relatedProduct.name}">${relatedProduct.name}</h3>
                  <div class="flex items-center mb-1">
                    <div class="flex text-yellow-400 text-xs">
                      ${renderStars(relatedProduct.rating)}
                    </div>
                  </div>
                  <div class="text-primary font-bold text-sm">¥${relatedProduct.price}</div>
                </div>
              </div>
            `).join('')}
          </div>
        </div>
        
        <!-- AI推荐 -->
        <div class="mt-12">
          <div class="flex items-center mb-6">
            <h2 class="text-xl font-semibold">猜你喜欢</h2>
            <span class="ml-2 badge bg-blue-100 text-blue-800">AI推荐</span>
          </div>
          <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
            ${getAIRecommendedProducts(4).map(recommendedProduct => `
              <div class="bg-white rounded-lg shadow-sm overflow-hidden card-hover">
                <div class="relative">
                  <img src="${recommendedProduct.images[0]}" alt="${recommendedProduct.name}" class="w-full h-40 object-contain p-2">
                  <button class="favorite-btn absolute top-2 right-2 w-7 h-7 rounded-full bg-white bg-opacity-80 flex items-center justify-center text-gray-500 hover:text-red-500 transition-colors ${isFavorite(recommendedProduct.id) ? 'text-red-500' : ''}" data-id="${recommendedProduct.id}">
                    <i class="fa ${isFavorite(recommendedProduct.id) ? 'fa-heart' : 'fa-heart-o'}"></i>
                  </button>
                </div>
                <div class="p-2">
                  <h3 class="text-sm font-medium mb-1 line-clamp-2 h-10" title="${recommendedProduct.name}">${recommendedProduct.name}</h3>
                  <div class="flex items-center mb-1">
                    <div class="flex text-yellow-400 text-xs">
                      ${renderStars(recommendedProduct.rating)}
                    </div>
                  </div>
                  <div class="text-primary font-bold text-sm">¥${recommendedProduct.price}</div>
                </div>
              </div>
            `).join('')}
          </div>
        </div>
      `;
      
      // 显示模态框
      productModal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
      
      // 添加事件监听
      document.querySelectorAll('.detail-tab').forEach(tab => {
        tab.addEventListener('click', (e) => {
          const tabId = e.currentTarget.dataset.tab;
          
          // 更新标签样式
          document.querySelectorAll('.detail-tab').forEach(t => {
            t.classList.remove('text-primary', 'border-b-2', 'border-primary');
            t.classList.add('text-gray-500');
          });
          e.currentTarget.classList.remove('text-gray-500');
          e.currentTarget.classList.add('text-primary', 'border-b-2', 'border-primary');
          
          // 显示对应内容
          document.querySelectorAll('.tab-content').forEach(content => {
            content.classList.add('hidden');
          });
          document.getElementById(`${tabId}-tab`).classList.remove('hidden');
        });
      });
      
      // 数量调整
      const quantityInput = document.querySelector('.quantity-input');
      const quantityBtns = document.querySelectorAll('.quantity-btn');
      
      quantityBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          const action = btn.dataset.action;
          let quantity = parseInt(quantityInput.value);
          
          if (action === 'increase') {
            if (quantity < product.stock) {
              quantityInput.value = quantity + 1;
            }
          } else if (action === 'decrease') {
            if (quantity > 1) {
              quantityInput.value = quantity - 1;
            }
          }
        });
      });
      
      // 加入购物车
      document.querySelector('.add-to-cart-detail-btn').addEventListener('click', () => {
        const quantity = parseInt(quantityInput.value);
        addToCart(product.id, quantity);
      });
      
      // 立即购买
      document.querySelector('.buy-now-btn').addEventListener('click', () => {
        const quantity = parseInt(quantityInput.value);
        addToCart(product.id, quantity);
        openCart();
      });
      
      // 收藏按钮
      const favoriteDetailBtn = document.querySelector('.favorite-detail-btn');
      favoriteDetailBtn.addEventListener('click', () => {
        toggleFavorite(product.id);
        
        // 更新按钮状态
        const icon = favoriteDetailBtn.querySelector('i');
        if (icon.classList.contains('fa-heart-o')) {
          icon.classList.remove('fa-heart-o');
          icon.classList.add('fa-heart');
          favoriteDetailBtn.classList.add('text-red-500', 'border-red-500');
        } else {
          icon.classList.remove('fa-heart');
          icon.classList.add('fa-heart-o');
          favoriteDetailBtn.classList.remove('text-red-500', 'border-red-500');
        }
      });
      
      // 图片切换
      const thumbnailImages = productDetailContent.querySelectorAll('.grid-cols-4 img');
      const mainImage = productDetailContent.querySelector('.max-h-80');
      
      thumbnailImages.forEach((img, index) => {
        img.parentElement.addEventListener('click', () => {
          mainImage.src = img.src;
          
          // 更新缩略图样式
          thumbnailImages.forEach(thumb => {
            thumb.parentElement.classList.remove('ring-2', 'ring-primary');
          });
          img.parentElement.classList.add('ring-2', 'ring-primary');
        });
      });
      
      // 相关推荐商品点击
      productDetailContent.querySelectorAll('.card-hover').forEach(card => {
        card.addEventListener('click', (e) => {
          if (!e.target.closest('.favorite-btn')) {
            const productId = card.querySelector('.favorite-btn').dataset.id;
            showProductDetails(productId);
          }
        });
      });
      
      // 相关推荐收藏按钮
      productDetailContent.querySelectorAll('.favorite-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const productId = btn.dataset.id;
          toggleFavorite(productId);
          
          // 更新按钮状态
          const icon = btn.querySelector('i');
          if (icon.classList.contains('fa-heart-o')) {
            icon.classList.remove('fa-heart-o');
            icon.classList.add('fa-heart');
            btn.classList.add('text-red-500');
          } else {
            icon.classList.remove('fa-heart');
            icon.classList.add('fa-heart-o');
            btn.classList.remove('text-red-500');
          }
        });
      });
    }

    // 获取相关推荐商品
    function getRelatedProducts(currentProductId, count) {
      const currentProduct = products.find(p => p.id === currentProductId);
      if (!currentProduct) return [];
      
      // 筛选同类别商品
      const sameCategoryProducts = products
        .filter(p => p.category === currentProduct.category && p.id !== currentProductId)
        .sort(() => 0.5 - Math.random()); // 随机排序
      
      // 如果同类别商品不足，补充其他类别商品
      if (sameCategoryProducts.length < count) {
        const otherProducts = products
          .filter(p => p.id !== currentProductId && !sameCategoryProducts.includes(p))
          .sort(() => 0.5 - Math.random());
        
        sameCategoryProducts.push(...otherProducts.slice(0, count - sameCategoryProducts.length));
      }
      
      return sameCategoryProducts.slice(0, count);
    }

    // 获取AI推荐商品
    function getAIRecommendedProducts(count) {
      // 如果没有浏览历史，返回随机商品
      if (browsingHistory.length === 0) {
        return [...products]
          .sort(() => 0.5 - Math.random())
          .slice(0, count);
      }
      
      // 根据浏览历史推荐相似商品
      const recentProduct = products.find(p => p.id === browsingHistory[browsingHistory.length - 1]);
      if (!recentProduct) {
        return [...products]
          .sort(() => 0.5 - Math.random())
          .slice(0, count);
      }
      
      // 优先推荐同类别商品
      const sameCategoryProducts = products
        .filter(p => p.category === recentProduct.category && !browsingHistory.includes(p.id))
        .sort(() => 0.5 - Math.random());
      
      // 如果同类别商品不足，补充其他类别商品
      if (sameCategoryProducts.length < count) {
        const otherProducts = products
          .filter(p => !browsingHistory.includes(p.id) && !sameCategoryProducts.includes(p))
          .sort(() => 0.5 - Math.random());
        
        sameCategoryProducts.push(...otherProducts.slice(0, count - sameCategoryProducts.length));
      }
      
      return sameCategoryProducts.slice(0, count);
    }

    // 添加到浏览历史
    function addToBrowsingHistory(productId) {
      // 如果商品已在历史中，移到最前面
      const index = browsingHistory.indexOf(productId);
      if (index !== -1) {
        browsingHistory.splice(index, 1);
      }
      
      browsingHistory.push(productId);
      
      // 限制历史记录长度
      if (browsingHistory.length > 10) {
        browsingHistory.shift();
      }
      
      // 保存到本地存储
      localStorage.setItem('browsingHistory', JSON.stringify(browsingHistory));
    }

    // 添加到购物车
    function addToCart(productId, quantity = 1) {
      const product = products.find(p => p.id === productId);
      
      if (!product) return;
      
      // 检查库存
      if (quantity > product.stock) {
        alert(`抱歉，库存不足，当前库存为 ${product.stock} 件`);
        return;
      }
      
      // 检查商品是否已在购物车中
      const existingItemIndex = cart.items.findIndex(item => item.productId === productId);
      
      if (existingItemIndex !== -1) {
        // 更新数量
        cart.items[existingItemIndex].quantity += quantity;
        cart.items[existingItemIndex].totalPrice = cart.items[existingItemIndex].price * cart.items[existingItemIndex].quantity;
      } else {
        // 添加新商品
        cart.items.push({
          productId: product.id,
          name: product.name,
          image: product.images[0],
          price: product.price,
          quantity: quantity,
          totalPrice: product.price * quantity
        });
      }
      
      // 更新购物车统计
      updateCartStats();
      
      // 保存到本地存储
      saveCartToLocalStorage();
      
      // 更新UI
      updateCartUI();
      updateCartCount();
      
      // 显示添加成功提示
      showToast(`已添加 ${quantity} 件 ${product.name} 到购物车`);
    }

    // 更新购物车统计
    function updateCartStats() {
      cart.totalItems = cart.items.reduce((total, item) => total + item.quantity, 0);
      cart.totalPrice = cart.items.reduce((total, item) => total + item.totalPrice, 0);
    }

    // 从购物车移除商品
    function removeFromCart(productId) {
      cart.items = cart.items.filter(item => item.productId !== productId);
      
      // 更新购物车统计
      updateCartStats();
      
      // 保存到本地存储
      saveCartToLocalStorage();
      
      // 更新UI
      updateCartUI();
      updateCartCount();
    }

    // 更新购物车商品数量
    function updateCartItemQuantity(productId, quantity) {
      const product = products.find(p => p.id === productId);
      
      if (!product) return;
      
      // 检查库存
      if (quantity > product.stock) {
        alert(`抱歉，库存不足，当前库存为 ${product.stock} 件`);
        return;
      }
      
      const itemIndex = cart.items.findIndex(item => item.productId === productId);
      
      if (itemIndex !== -1) {
        if (quantity <= 0) {
          removeFromCart(productId);
          return;
        }
        
        cart.items[itemIndex].quantity = quantity;
        cart.items[itemIndex].totalPrice = cart.items[itemIndex].price * quantity;
        
        // 更新购物车统计
        updateCartStats();
        
        // 保存到本地存储
        saveCartToLocalStorage();
        
        // 更新UI
        updateCartUI();
        updateCartCount();
      }
    }

    // 更新购物车UI
    function updateCartUI() {
      if (cart.items.length === 0) {
        emptyCart.classList.remove('hidden');
        cartList.classList.add('hidden');
        cartSummary.classList.add('hidden');
        return;
      }
      
      emptyCart.classList.add('hidden');
      cartList.classList.remove('hidden');
      cartSummary.classList.remove('hidden');
      
      // 更新购物车列表
      cartList.innerHTML = '';
      
      cart.items.forEach(item => {
        const cartItem = document.createElement('div');
        cartItem.className = 'flex items-center border-b pb-4';
        cartItem.innerHTML = `
          <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-contain">
          <div class="ml-3 flex-1">
            <h3 class="text-sm font-medium line-clamp-2">${item.name}</h3>
            <div class="flex items-center justify-between mt-2">
              <div class="flex items-center">
                <button class="cart-quantity-btn w-6 h-6 border border-gray-300 rounded flex items-center justify-center hover:bg-gray-50" data-action="decrease" data-id="${item.productId}">
                  <i class="fa fa-minus text-xs"></i>
                </button>
                <input type="number" class="cart-quantity-input w-10 h-6 border-t border-b border-gray-300 text-center text-sm focus:outline-none" value="${item.quantity}" min="1" data-id="${item.productId}">
                <button class="cart-quantity-btn w-6 h-6 border border-gray-300 rounded flex items-center justify-center hover:bg-gray-50" data-action="increase" data-id="${item.productId}">
                  <i class="fa fa-plus text-xs"></i>
                </button>
              </div>
              <div class="text-primary font-medium">¥${item.totalPrice}</div>
            </div>
          </div>
          <button class="remove-from-cart ml-2 text-gray-400 hover:text-red-500" data-id="${item.productId}">
            <i class="fa fa-trash"></i>
          </button>
        `;
        
        cartList.appendChild(cartItem);
      });
      
      // 更新小计和数量
      cartSubtotal.textContent = `¥${cart.totalPrice.toFixed(2)}`;
      cartItemCount.textContent = cart.totalItems;
      
      // 添加事件监听
      document.querySelectorAll('.remove-from-cart').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const productId = e.currentTarget.dataset.id;
          removeFromCart(productId);
        });
      });
      
      document.querySelectorAll('.cart-quantity-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const productId = e.currentTarget.dataset.id;
          const action = e.currentTarget.dataset.action;
          const input = e.currentTarget.parentElement.querySelector('.cart-quantity-input');
          let quantity = parseInt(input.value);
          
          if (action === 'increase') {
            quantity++;
          } else if (action === 'decrease') {
            quantity--;
          }
          
          updateCartItemQuantity(productId, quantity);
          input.value = quantity;
        });
      });
      
      document.querySelectorAll('.cart-quantity-input').forEach(input => {
        input.addEventListener('change', (e) => {
          const productId = e.currentTarget.dataset.id;
          let quantity = parseInt(e.currentTarget.value);
          
          // 确保数量有效
          if (isNaN(quantity) || quantity < 1) {
            quantity = 1;
            e.currentTarget.value = 1;
          }
          
          updateCartItemQuantity(productId, quantity);
        });
      });
    }

    // 更新购物车计数
    function updateCartCount() {
      cartCount.textContent = cart.totalItems;
    }

    // 切换收藏状态
    function toggleFavorite(productId) {
      const product = products.find(p => p.id === productId);
      
      if (!product) return;
      
      const existingItemIndex = favorites.items.findIndex(item => item.productId === productId);
      
      if (existingItemIndex !== -1) {
        // 移除收藏
        favorites.items.splice(existingItemIndex, 1);
        showToast(`已取消收藏 ${product.name}`);
      } else {
        // 添加收藏
        favorites.items.push({
          productId: product.id,
          name: product.name,
          image: product.images[0],
          price: product.price,
          rating: product.rating
        });
        showToast(`已收藏 ${product.name}`);
      }
      
      // 保存到本地存储
      saveFavoritesToLocalStorage();
      
      // 更新UI
      updateFavoritesUI();
      updateFavoritesCount();
    }

    // 检查商品是否已收藏
    function isFavorite(productId) {
      return favorites.items.some(item => item.productId === productId);
    }

    // 更新收藏夹UI
    function updateFavoritesUI() {
      if (favorites.items.length === 0) {
        emptyFavorites.classList.remove('hidden');
        favoritesList.classList.add('hidden');
        return;
      }
      
      emptyFavorites.classList.add('hidden');
      favoritesList.classList.remove('hidden');
      
      // 更新收藏夹列表
      favoritesList.innerHTML = '';
      
      favorites.items.forEach(item => {
        const favoriteItem = document.createElement('div');
        favoriteItem.className = 'bg-white rounded-lg shadow-sm overflow-hidden card-hover';
        favoriteItem.innerHTML = `
          <div class="relative">
            <img src="${item.image}" alt="${item.name}" class="w-full h-32 object-contain p-2">
            <button class="remove-from-favorites absolute top-2 right-2 w-7 h-7 rounded-full bg-white bg-opacity-80 flex items-center justify-center text-red-500 hover:text-red-600 transition-colors" data-id="${item.productId}">
              <i class="fa fa-heart"></i>
            </button>
          </div>
          <div class="p-2">
            <h3 class="text-sm font-medium mb-1 line-clamp-2 h-10" title="${item.name}">${item.name}</h3>
            <div class="flex items-center mb-1">
              <div class="flex text-yellow-400 text-xs">
                ${renderStars(item.rating)}
              </div>
            </div>
            <div class="text-primary font-bold text-sm">¥${item.price}</div>
            <div class="mt-2 flex space-x-1">
              <button class="add-to-cart-from-favorite flex-1 py-1 text-xs bg-primary text-white rounded hover:bg-primary/90 transition-colors" data-id="${item.productId}">
                加入购物车
              </button>
              <button class="view-details-from-favorite flex-1 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50 transition-colors" data-id="${item.productId}">
                查看详情
              </button>
            </div>
          </div>
        `;
        
        favoritesList.appendChild(favoriteItem);
      });
      
      // 添加事件监听
      document.querySelectorAll('.remove-from-favorites').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const productId = e.currentTarget.dataset.id;
          toggleFavorite(productId);
        });
      });
      
      document.querySelectorAll('.add-to-cart-from-favorite').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const productId = e.currentTarget.dataset.id;
          addToCart(productId);
        });
      });
      
      document.querySelectorAll('.view-details-from-favorite').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const productId = e.currentTarget.dataset.id;
          closeFavoritesSidebar();
          setTimeout(() => {
            showProductDetails(productId);
          }, 300);
        });
      });
      
      document.querySelectorAll('#favorites-list .card-hover').forEach(card => {
        card.addEventListener('click', () => {
          const productId = card.querySelector('.remove-from-favorites').dataset.id;
          closeFavoritesSidebar();
          setTimeout(() => {
            showProductDetails(productId);
          }, 300);
        });
      });
    }

    // 更新收藏夹计数
    function updateFavoritesCount() {
      favoritesCount.textContent = favorites.items.length;
    }

    // 保存购物车到本地存储
    function saveCartToLocalStorage() {
      localStorage.setItem('cart', JSON.stringify({
        items: cart.items,
        totalItems: cart.totalItems,
        totalPrice: cart.totalPrice
      }));
    }

    // 保存收藏夹到本地存储
    function saveFavoritesToLocalStorage() {
      localStorage.setItem('favorites', JSON.stringify({
        items: favorites.items
      }));
    }

    // 从本地存储加载购物车
    function loadCartFromLocalStorage() {
      const savedCart = localStorage.getItem('cart');
      
      if (savedCart) {
        const parsedCart = JSON.parse(savedCart);
        cart = {
          items: parsedCart.items || [],
          totalItems: parsedCart.totalItems || 0,
          totalPrice: parsedCart.totalPrice || 0
        };
        
        // 验证购物车数据
        validateCartData();
      }
    }

    // 从本地存储加载收藏夹
    function loadFavoritesFromLocalStorage() {
      const savedFavorites = localStorage.getItem('favorites');
      
      if (savedFavorites) {
        const parsedFavorites = JSON.parse(savedFavorites);
        favorites = {
          items: parsedFavorites.items || []
        };
        
        // 验证收藏夹数据
        validateFavoritesData();
      }
    }

    // 从本地存储加载浏览历史
    function loadBrowsingHistoryFromLocalStorage() {
      const savedHistory = localStorage.getItem('browsingHistory');
      
      if (savedHistory) {
        browsingHistory = JSON.parse(savedHistory);
        
        // 限制历史记录长度
        if (browsingHistory.length > 10) {
          browsingHistory = browsingHistory.slice(-10);
        }
      }
    }

    // 验证购物车数据
    function validateCartData() {
      // 过滤掉不存在的商品
      cart.items = cart.items.filter(item => {
        const product = products.find(p => p.id === item.productId);
        return product !== undefined;
      });
      
      // 更新购物车统计
      updateCartStats();
    }

    // 验证收藏夹数据
    function validateFavoritesData() {
      // 过滤掉不存在的商品
      favorites.items = favorites.items.filter(item => {
        const product = products.find(p => p.id === item.productId);
        return product !== undefined;
      });
    }

    // 检查本地存储
    function checkLocalStorage() {
      loadCartFromLocalStorage();
      loadFavoritesFromLocalStorage();
      loadBrowsingHistoryFromLocalStorage();
      
      // 更新UI
      updateCartUI();
      updateFavoritesUI();
    }

    // 显示提示消息
    function showToast(message) {
      // 创建提示元素
      const toast = document.createElement('div');
      toast.className = 'fixed bottom-6 left-1/2 transform -translate-x-1/2 bg-dark text-white px-4 py-2 rounded-md shadow-lg z-50 animate-fade-in';
      toast.textContent = message;
      
      // 添加到页面
      document.body.appendChild(toast);
      
      // 3秒后移除
      setTimeout(() => {
        toast.classList.add('opacity-0', 'transition-opacity', 'duration-300');
        setTimeout(() => {
          document.body.removeChild(toast);
        }, 300);
      }, 3000);
    }

    // 打开购物车
    function openCart() {
      cartSidebar.classList.remove('translate-x-full');
      document.body.style.overflow = 'hidden';
    }

    // 关闭购物车
    function closeCartSidebar() {
      cartSidebar.classList.add('translate-x-full');
      document.body.style.overflow = '';
    }

    // 打开收藏夹
    function openFavorites() {
      favoritesSidebar.classList.remove('translate-x-full');
      document.body.style.overflow = 'hidden';
    }

    // 关闭收藏夹
    function closeFavoritesSidebar() {
      favoritesSidebar.classList.add('translate-x-full');
      document.body.style.overflow = '';
    }

    // 筛选商品
    function filterProducts() {
      // 获取分类筛选
      const selectedCategories = Array.from(document.querySelectorAll('.category-filter:checked')).map(checkbox => checkbox.value);
      
      // 获取价格筛选
      const maxPrice = parseInt(priceRange.value);
      
      // 获取评分筛选
      const selectedRatings = Array.from(document.querySelectorAll('.rating-filter:checked')).map(checkbox => parseInt(checkbox.value));
      
      // 获取特性筛选
      const selectedFeatures = Array.from(document.querySelectorAll('.feature-filter:checked')).map(checkbox => checkbox.value);
      
      // 筛选商品
      let filteredProducts = [...products];
      
      // 分类筛选
      if (selectedCategories.length > 0 && !selectedCategories.includes('all')) {
        filteredProducts = filteredProducts.filter(product => selectedCategories.includes(product.category));
      }
      
      // 价格筛选
      filteredProducts = filteredProducts.filter(product => product.price <= maxPrice);
      
      // 评分筛选
      if (selectedRatings.length > 0) {
        const minRating = Math.min(...selectedRatings);
        filteredProducts = filteredProducts.filter(product => product.rating >= minRating);
      }
      
      // 特性筛选
      if (selectedFeatures.length > 0) {
        filteredProducts = filteredProducts.filter(product => {
          for (const feature of selectedFeatures) {
            if (feature === 'new' && !product.isNew) return false;
            if (feature === 'hot' && !product.isHot) return false;
            if (feature === 'discount' && product.discount <= 0) return false;
          }
          return true;
        });
      }
      
      // 排序
      const sortBy = sortSelect.value;
      
      switch (sortBy) {
        case 'price-asc':
          filteredProducts.sort((a, b) => a.price - b.price);
          break;
        case 'price-desc':
          filteredProducts.sort((a, b) => b.price - a.price);
          break;
        case 'rating-desc':
          filteredProducts.sort((a, b) => b.rating - a.rating);
          break;
        case 'newest':
          filteredProducts.sort((a, b) => b.isNew - a.isNew);
          break;
        default:
          // 默认排序
          break;
      }
      
      // 渲染筛选后的商品
      renderProducts(filteredProducts);
    }

    // 重置所有筛选
    function resetAllFilters() {
      // 重置分类筛选
      document.querySelectorAll('.category-filter').forEach(checkbox => {
        checkbox.checked = checkbox.value === 'all';
      });
      
      // 重置价格筛选
      priceRange.value = 5000;
      priceMax.textContent = '¥5000+';
      
      // 重置评分筛选
      document.querySelectorAll('.rating-filter').forEach(checkbox => {
        checkbox.checked = false;
      });
      
      // 重置特性筛选
      document.querySelectorAll('.feature-filter').forEach(checkbox => {
        checkbox.checked = false;
      });
      
      // 重置排序
      sortSelect.value = 'default';
      
      // 重新渲染商品
      renderProducts(products);
    }

    // 初始化事件监听
    function initEventListeners() {
      // 关闭商品详情模态框
      closeModal.addEventListener('click', () => {
        productModal.classList.add('hidden');
        document.body.style.overflow = '';
      });
      
      modalOverlay.addEventListener('click', () => {
        productModal.classList.add('hidden');
        document.body.style.overflow = '';
      });
      
      // 购物车侧边栏
      cartBtn.addEventListener('click', () => {
        openCart();
      });
      
      closeCart.addEventListener('click', () => {
        closeCartSidebar();
      });
      
      // 收藏夹侧边栏
      favoritesBtn.addEventListener('click', () => {
        openFavorites();
      });
      
      closeFavorites.addEventListener('click', () => {
        closeFavoritesSidebar();
      });
      
      // 返回顶部按钮
      window.addEventListener('scroll', () => {
        if (window.scrollY > 300) {
          backToTop.classList.remove('opacity-0', 'invisible');
          backToTop.classList.add('opacity-100', 'visible');
        } else {
          backToTop.classList.remove('opacity-100', 'visible');
          backToTop.classList.add('opacity-0', 'invisible');
        }
      });
      
      backToTop.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
      
      // 移动端搜索框
      searchBtn.addEventListener('click', () => {
        mobileSearch.classList.toggle('hidden');
        if (!mobileSearch.classList.contains('hidden')) {
          mobileSearch.querySelector('input').focus();
        }
      });
      
      // 移动端菜单
      mobileMenuBtn.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
      
      // 开始购物按钮
      startShopping.addEventListener('click', () => {
        closeCartSidebar();
      });
      
      // 浏览商品按钮
      browseProducts.addEventListener('click', () => {
        closeFavoritesSidebar();
      });
      
      // 结算按钮
      checkoutBtn.addEventListener('click', () => {
        if (cart.items.length > 0) {
          alert('感谢您的购买！订单已提交。');
          cart.items = [];
          updateCartStats();
          saveCartToLocalStorage();
          updateCartUI();
          updateCartCount();
          closeCartSidebar();
        }
      });
      
      // 价格滑块
      priceRange.addEventListener('input', () => {
        const value = priceRange.value;
        priceMax.textContent = value >= 5000 ? '¥5000+' : `¥${value}`;
        filterProducts();
      });
      
      // 价格区间按钮
      document.querySelectorAll('.price-filter').forEach(btn => {
        btn.addEventListener('click', () => {
          const min = parseInt(btn.dataset.min);
          const max = parseInt(btn.dataset.max);
          
          priceRange.value = max;
          priceMin.textContent = `¥${min}`;
          priceMax.textContent = max >= 5000 ? '¥5000+' : `¥${max}`;
          
          filterProducts();
        });
      });
      
      // 筛选条件变化
      document.querySelectorAll('.category-filter, .rating-filter, .feature-filter').forEach(checkbox => {
        checkbox.addEventListener('change', filterProducts);
      });
      
      // 排序变化
      sortSelect.addEventListener('change', filterProducts);
      
      // 重置筛选按钮
      resetFilters.addEventListener('click', () => {
        resetAllFilters();
      });
      
      // 视图切换
      gridView.addEventListener('click', () => {
        gridView.classList.add('bg-primary', 'text-white');
        gridView.classList.remove('text-gray-600');
        listView.classList.remove('bg-primary', 'text-white');
        listView.classList.add('text-gray-600');
        
        productsGrid.classList.remove('grid-cols-1');
        productsGrid.classList.add('grid-cols-1', 'sm:grid-cols-2', 'lg:grid-cols-3');
      });
      
      listView.addEventListener('click', () => {
        listView.classList.add('bg-primary', 'text-white');
        listView.classList.remove('text-gray-600');
        gridView.classList.remove('bg-primary', 'text-white');
        gridView.classList.add('text-gray-600');
        
        productsGrid.classList.remove('sm:grid-cols-2', 'lg:grid-cols-3');
        productsGrid.classList.add('grid-cols-1');
      });
    }

    // 获取随机日期
    function getRandomDate() {
      const months = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'];
      const month = months[Math.floor(Math.random() * 12)];
      const day = Math.floor(Math.random() * 28) + 1;
      return `${month}${day}日`;
    }

    // 获取随机评价
    function getRandomReview() {
      const reviews = [
        '商品质量很好，与描述一致，非常满意。',
        '物流速度很快，包装完好，商品外观精美。',
        '使用体验不错，性价比高，值得推荐。',
        '颜色比图片稍深，但整体还是很喜欢。',
        '尺寸合适，材质舒适，非常满意这次购物。',
        '功能强大，操作简单，很实用的一款产品。',
        '外观设计时尚，做工精细，非常满意。',
        '价格实惠，质量不错，值得购买。'
      ];
      
      return reviews[Math.floor(Math.random() * reviews.length)];
    }
  </script>


</body></html>
